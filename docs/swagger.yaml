basePath: /
definitions:
  access.CreateAccessRequest:
    properties:
      email:
        type: string
      full_name:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - email
    - full_name
    type: object
  access.UpdateExpiredDateRequest:
    properties:
      expired_date:
        type: string
    type: object
  access.UpdateRateLimitRequest:
    properties:
      rate_limit:
        minimum: 1
        type: integer
    required:
    - rate_limit
    type: object
  access.User:
    properties:
      email:
        type: string
      expired_date:
        type: string
      group:
        $ref: '#/definitions/group.Group'
      group_id:
        type: integer
      id:
        type: string
      name:
        type: string
      rate_limit:
        description: Requests per minute
        type: integer
      status_id:
        type: integer
    type: object
  audit.AuditLog:
    properties:
      access_id:
        type: string
      api_key:
        type: string
      created_at:
        type: string
      id:
        type: string
      ip_address:
        type: string
      method:
        type: string
      path:
        type: string
      request_body:
        type: string
      request_headers:
        type: string
      response_body:
        type: string
      response_time:
        description: in milliseconds
        type: integer
      status_code:
        type: integer
      status_id:
        type: integer
      user_agent:
        type: string
      user_email:
        type: string
    type: object
  configuration.Configuration:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      key:
        type: string
      status_id:
        type: integer
      updated_at:
        type: string
      value:
        type: string
    type: object
  configuration.CreateConfigurationRequest:
    properties:
      description:
        type: string
      key:
        type: string
      value:
        type: string
    required:
    - key
    type: object
  configuration.UpdateConfigurationRequest:
    properties:
      description:
        type: string
      value:
        type: string
    type: object
  example.ChatCompletionRequest:
    properties:
      custom_api_key:
        type: string
      custom_endpoint:
        description: Custom AI Provider Configuration
        type: string
      max_tokens:
        type: integer
      message:
        type: string
      model:
        type: string
      system_prompt:
        type: string
      temperature:
        type: number
    required:
    - message
    type: object
  example.ChatCompletionResponse:
    properties:
      model:
        type: string
      processing_time:
        type: string
      response:
        type: string
      usage:
        properties:
          completion_tokens:
            type: integer
          prompt_tokens:
            type: integer
          total_tokens:
            type: integer
        type: object
    type: object
  example.CreateExampleRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  example.Example:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      status_id:
        type: integer
      updated_at:
        type: string
    type: object
  group.CreateGroupRequest:
    properties:
      description:
        type: string
      name:
        type: string
      permission_ids:
        items:
          type: integer
        type: array
    required:
    - name
    type: object
  group.Group:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/permission.Permission'
        type: array
      status_id:
        type: integer
    type: object
  group.UpdateGroupPermissionsRequest:
    properties:
      permission_ids:
        items:
          type: integer
        type: array
    type: object
  permission.CreatePermissionRequest:
    properties:
      action:
        type: string
      description:
        type: string
      name:
        type: string
      resource:
        type: string
    required:
    - action
    - name
    - resource
    type: object
  permission.Permission:
    properties:
      action:
        description: e.g., "create", "read", "update", "delete"
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      resource:
        description: e.g., "examples", "users", "reports"
        type: string
      status_id:
        type: integer
    type: object
host: localhost:3000
info:
  contact:
    name: API Support
  description: My API Description
  title: My API
  version: "1.0"
paths:
  /v1/access:
    post:
      consumes:
      - application/json
      description: Create new access with API key, default expiration (6 months),
        group_id 4, and rate limit 120
      parameters:
      - description: Access creation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/access.CreateAccessRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create new access
      tags:
      - Access
  /v1/access/{id}/expired-date:
    delete:
      consumes:
      - application/json
      description: Remove the expiration date for a user's API key (never expires)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove API key expiration date
      tags:
      - Access
    put:
      consumes:
      - application/json
      description: Update the expiration date for a user's API key
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Expiration date data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/access.UpdateExpiredDateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update API key expiration date
      tags:
      - Access
  /v1/access/{id}/rate-limit:
    put:
      consumes:
      - application/json
      description: Update the rate limit for a user's API key (requests per minute)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Rate limit data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/access.UpdateRateLimitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update API key rate limit
      tags:
      - Access
  /v1/audit-logs:
    get:
      consumes:
      - application/json
      description: Get audit logs with filtering and pagination
      parameters:
      - description: Filter by access ID (UUID)
        in: query
        name: access_id
        type: string
      - description: Filter by user email
        in: query
        name: user_email
        type: string
      - description: Filter by HTTP method
        in: query
        name: method
        type: string
      - description: Filter by API path
        in: query
        name: path
        type: string
      - description: Filter by status code
        in: query
        name: status_code
        type: integer
      - description: Filter from date (YYYY-MM-DD)
        in: query
        name: date_from
        type: string
      - description: Filter to date (YYYY-MM-DD)
        in: query
        name: date_to
        type: string
      - description: 'Limit results (default: 50, max: 1000)'
        in: query
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get audit logs
      tags:
      - Audit
  /v1/audit-logs/{id}:
    get:
      consumes:
      - application/json
      description: Get detailed audit log by ID including request/response body
      parameters:
      - description: Audit Log ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/audit.AuditLog'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get audit log by ID
      tags:
      - Audit
  /v1/audit-logs/cleanup:
    delete:
      consumes:
      - application/json
      description: Delete audit logs older than specified days
      parameters:
      - description: Delete logs older than this many days
        in: query
        name: days
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete old audit logs
      tags:
      - Audit
  /v1/configurations:
    get:
      consumes:
      - application/json
      description: Get list of all configurations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/configuration.Configuration'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all configurations
      tags:
      - Configuration
    post:
      consumes:
      - application/json
      description: Create a new configuration with name and description
      parameters:
      - description: Configuration data
        in: body
        name: configuration
        required: true
        schema:
          $ref: '#/definitions/configuration.CreateConfigurationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/configuration.Configuration'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new configuration
      tags:
      - Configuration
  /v1/configurations/{id}:
    delete:
      consumes:
      - application/json
      description: Soft delete a configuration (set status_id to 0)
      parameters:
      - description: Configuration ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Soft delete configuration
      tags:
      - Configuration
    get:
      consumes:
      - application/json
      description: Get a specific configuration by its ID
      parameters:
      - description: Configuration ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/configuration.Configuration'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get configuration by ID
      tags:
      - Configuration
    put:
      consumes:
      - application/json
      description: Update an existing configuration
      parameters:
      - description: Configuration ID
        in: path
        name: id
        required: true
        type: string
      - description: Configuration data
        in: body
        name: configuration
        required: true
        schema:
          $ref: '#/definitions/configuration.UpdateConfigurationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/configuration.Configuration'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update configuration
      tags:
      - Configuration
  /v1/configurations/{id}/restore:
    post:
      consumes:
      - application/json
      description: Restore a soft deleted configuration (set status_id to 1)
      parameters:
      - description: Configuration ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Restore configuration
      tags:
      - Configuration
  /v1/configurations/deleted:
    get:
      consumes:
      - application/json
      description: Get list of all soft deleted configurations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/configuration.Configuration'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get deleted configurations
      tags:
      - Configuration
  /v1/configurations/key/{key}:
    get:
      consumes:
      - application/json
      description: Get a specific configuration by its key
      parameters:
      - description: Configuration Key
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/configuration.Configuration'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get configuration by key
      tags:
      - Configuration
  /v1/examples:
    get:
      consumes:
      - application/json
      description: Get list of all examples
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/example.Example'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all examples
      tags:
      - Example
    post:
      consumes:
      - application/json
      description: Create a new example with name and description
      parameters:
      - description: Example data
        in: body
        name: example
        required: true
        schema:
          $ref: '#/definitions/example.CreateExampleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/example.Example'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new example
      tags:
      - Example
  /v1/examples/{id}:
    delete:
      consumes:
      - application/json
      description: Soft delete an example (set status_id to 0)
      parameters:
      - description: Example ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Soft delete example
      tags:
      - Example
    get:
      consumes:
      - application/json
      description: Get a specific example by its ID
      parameters:
      - description: Example ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.Example'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get example by ID
      tags:
      - Example
    put:
      consumes:
      - application/json
      description: Update an existing example
      parameters:
      - description: Example ID
        in: path
        name: id
        required: true
        type: string
      - description: Example data
        in: body
        name: example
        required: true
        schema:
          $ref: '#/definitions/example.CreateExampleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.Example'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update example
      tags:
      - Example
  /v1/examples/{id}/restore:
    post:
      consumes:
      - application/json
      description: Restore a soft deleted example (set status_id to 1)
      parameters:
      - description: Example ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Restore example
      tags:
      - Example
  /v1/examples/chat/completion:
    post:
      consumes:
      - application/json
      description: Create a chat completion using AI (OpenAI compatible API)
      parameters:
      - description: Chat completion request
        in: body
        name: chat
        required: true
        schema:
          $ref: '#/definitions/example.ChatCompletionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/example.ChatCompletionResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: AI Chat Completion
      tags:
      - Example
  /v1/examples/chat/completion/stream:
    post:
      consumes:
      - application/json
      description: Create a streaming chat completion using AI (OpenAI compatible
        API)
      parameters:
      - description: Chat completion request
        in: body
        name: chat
        required: true
        schema:
          $ref: '#/definitions/example.ChatCompletionRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: Server-Sent Events stream
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: AI Chat Completion Stream
      tags:
      - Example
  /v1/examples/deleted:
    get:
      consumes:
      - application/json
      description: Get list of all soft deleted examples
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/example.Example'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get deleted examples
      tags:
      - Example
  /v1/groups:
    get:
      consumes:
      - application/json
      description: Get list of all groups with their permissions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/group.Group'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all groups
      tags:
      - Group
    post:
      consumes:
      - application/json
      description: Create a new group with permissions
      parameters:
      - description: Group data
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/group.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/group.Group'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new group
      tags:
      - Group
  /v1/groups/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a group by ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete group
      tags:
      - Group
    get:
      consumes:
      - application/json
      description: Get a specific group by its ID with permissions
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/group.Group'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get group by ID
      tags:
      - Group
  /v1/groups/{id}/permissions:
    put:
      consumes:
      - application/json
      description: Update permissions assigned to a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: Permission IDs
        in: body
        name: permissions
        required: true
        schema:
          $ref: '#/definitions/group.UpdateGroupPermissionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/group.Group'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update group permissions
      tags:
      - Group
  /v1/permissions:
    get:
      consumes:
      - application/json
      description: Get list of all permissions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/permission.Permission'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all permissions
      tags:
      - Permission
    post:
      consumes:
      - application/json
      description: Create a new permission with resource and action
      parameters:
      - description: Permission data
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/permission.CreatePermissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/permission.Permission'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new permission
      tags:
      - Permission
  /v1/permissions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a permission by ID
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete permission
      tags:
      - Permission
    get:
      consumes:
      - application/json
      description: Get a specific permission by its ID
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/permission.Permission'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get permission by ID
      tags:
      - Permission
  /v1/profile:
    get:
      consumes:
      - application/json
      description: Get current user profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/access.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - Access
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and your API token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
